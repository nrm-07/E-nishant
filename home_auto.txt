
#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <RBDdimmer.h>
int command=0;  

int fadevalue=0;
#define pwm  5
#define zerocross  4
int minBright = 5; //35 and 85 for the yellow bulb
int maxBright = 255;
const char* ssid = "nishant_iot";
ESP8266WebServer server(80);// 80 is port used for internet

dimmerLamp dimmer(pwm, zerocross);
//void ICACHE_RAM_ATTR ();

void handlestop()
{
  digitalWrite(14, 0);
  digitalWrite(12, 0);
 
  delay(5);
}

void handle01()
{
  digitalWrite(14, 1);
  digitalWrite(12, 0);
 
  
  delay(5);
}

void handle03()
{
  digitalWrite(14, 1);
  digitalWrite(12, 1);
 
  
  delay(5);
}

void handle02()
{
  digitalWrite(14, 0);
  digitalWrite(12, 1);
 
  
  delay(5);
}
void setup() {
pinMode(14, OUTPUT);
 pinMode(12, OUTPUT); 
  Serial.begin(115200);
   server.begin(); 
    
 Serial.println("kjgngiudgniudsg hgfudshfuiod hdufhdu");
//ESP.wdtDisable();
  //while (1){ESP.wdtFeed();};
  dimmer.begin(NORMAL_MODE, ON); //dimmer initialization: name.begin(MODE, STATE)
  Serial.print(dimmer.getPower());
 
    
  Serial.println("AC Light Dimmer program has started.");
// Connecting WiFi

  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
 
 // Starting WEB-server 
     server.on ( "/", HTTP_handleRoot );
     server.onNotFound ( HTTP_handleRoot );
       
      
}



void loop() {

    server.handleClient();
   
   
      command = server.arg("State").toInt();
  Serial.println(command);
 
  if (!(command==1 || command ==2 || command ==0 || command == 3))
    
    {  
     int fadeValue = map(command, 5, 255, minBright, maxBright);
    dimmer.setPower(fadeValue);
  // Serial.println(fadevalue);
   // dimmer.setPower(command);
  
    }
      
    if(command==1 || command == 2 ||  command == 0 || command == 3)
    {
      if (command == 1) handle01();
      else if (command == 2) handle02();
       else if (command == 3) handle03();
      else if (command == 0) handlestop();
       
    }
}

void HTTP_handleRoot(void) {

if( server.hasArg("State") ){
       Serial.println(server.arg("State"));
  }
  server.send ( 200, "text/html", "" );
  delay(1);
}
